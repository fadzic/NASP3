$(function() {

    after = new drawTree('#after');
    before = new drawTree('#before')

    befor_v = {}
    mujo={}

    spt = new SplayTree()

})

var cache = [];

function censor(key, value) {
    if (typeof value === 'object' && value !== null) {
        if (cache.indexOf(value) !== -1) {
            // Circular reference found, discard key
            return;
        }
        // Store value in our collection
        cache.push(value);
    }
    return value;
}

function addElement(e){
    document.getElementById("label").innerHTML=""

    spt.insert(parseFloat(e))


    before_v = mujo
    mujo = JSON.stringify(spt['root_'],censor)
    cache = []
    mujo=mujo.replace(/null/gi,"{}")
    console.log(mujo)
    mujo=JSON.parse(mujo)

    after.draw(mujo,'#after')
    before.draw(before_v,'#before')
}

function delElement(e){
    document.getElementById("label").innerHTML=""

    spt.remove(parseFloat(e))

    before_v = mujo
    mujo = JSON.stringify(spt['root_'],censor)
    cache = []
    mujo=mujo.replace(/null/gi,"{}")
    mujo=JSON.parse(mujo)

    //console.log(mujo)
    after.draw(mujo,'#after')
    before.draw(before_v,'#before')
}

function findElement(e){

    spt.find(parseFloat(e))

    mujo = JSON.stringify(spt['root_'],censor)
    cache = []
    mujo=mujo.replace(/null/gi,"{}")
    console.log(mujo)
    mujo=JSON.parse(mujo)

    after.draw(mujo,'#after')
    before.draw(before_v,'#before')
}