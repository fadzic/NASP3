$(function() {

    init();
    avl = new AVLTree();

    //draw(bst.toString());

})
var cache = [];

function censor(key, value) {
    if (typeof value === 'object' && value !== null) {
        if (cache.indexOf(value) !== -1) {
            // Circular reference found, discard key
            return;
        }
        // Store value in our collection
        cache.push(value);
    }
    return value;
}

function addElement(e){
    avl.insertNode(parseFloat(e))
    //avl.printAVLTree()

    mujo={}
    mujo = JSON.stringify(avl["root_"],censor)
    cache = []

    mujo=mujo.replace(/null/gi,"{}")
    mujo=JSON.parse(mujo)

    draw(mujo)
/*
    console.log(avl)
    console.log('aaaaaaaaaaaaaaaaaaa')*/


}

function delElement(e){
    avl.deleteNode(parseFloat(e))
    //avl.printAVLTree()

    mujo={}
    mujo = JSON.stringify(avl["root_"],censor)
    cache = []
    mujo=mujo.replace(/null/gi,"{}")
    mujo=JSON.parse(mujo)

    //console.log(mujo)
    draw(mujo)

}